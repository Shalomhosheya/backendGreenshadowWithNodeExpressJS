generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Crop {
  cropID         String  @id @default(uuid())
  cropName       String
  cropImage      Bytes
  scientificName String
  category       String
  season         String
}

model Vehicle {
  vehicleID       String @id @default(uuid())
  vehicleCategory String
  fueltype        String
  remarks         String
  status          String
  licenseplate    String

  reservations    Reservation[] // ✅ One Vehicle can have many Reservations
}

model Equipment { // ✅ Fixed Naming Convention
  equipID String @id @default(uuid())
  name    String
  type    String
  status  String
  EquipmentDetails EquipmentDetails[] // ✅ One Equipment can have many EquipmentDetails
}

model Field {
  fieldID       String  @id
  fieldName     String
  fieldLocation String
  fieldSize     String
  fieldStaff    String
  pic1          Bytes?
  pic2          Bytes?

  EquipmentDetails EquipmentDetails[] 
}

model Staff {
  staffID    String   @id @default(uuid())
  firstName  String
  lastName   String
  designation String
  gender     String
  address1   String
  address2   String
  address3   String
  address4   String
  address5   String
  joindate   DateTime
  DOB        DateTime
  role       String
  contactnum String
  email      String
  field      String
  EquipmentDetails EquipmentDetails[] 
  reservations Reservation[] // ✅ One Staff can have many Reservations

}

model Reservation { // ✅ Fixed Typo (reservaationID → reservationID)
  reservationID   String   @id @default(uuid())
  date            DateTime
  response        String
  reservationType String
  staffID         String
  vehicleID       String

  staff   Staff   @relation(fields: [staffID], references: [staffID])
  vehicle Vehicle @relation(fields: [vehicleID], references: [vehicleID])
}
model User {
  userID String @id @default(uuid())
  firstName String
  lastName String
  email String
  password String
  role String
  }

model EquipmentDetails {
  equipDetailID String @id @default(uuid())
  data String
  response String
  equipID String
  staffID String
  fieldID String

  staff   Staff   @relation(fields: [staffID], references: [staffID])
  field   Field   @relation(fields: [fieldID], references: [fieldID])
  equipment Equipment @relation(fields: [equipID], references: [equipID])
  }